// stylelint-disable property-blacklist
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $query: map-get($breakpoints, $breakpoint);

    @media #{$query} {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found in $breakpoints map.";
  }
}

@mixin transition($prop: all, $duration: 400ms, $easing: $easing) {
  @if (length($prop) == 1) {
    transition: $prop $duration $easing;

    @if ($prop != all) {
      will-change: $prop;
    }
  } @else {
    $result: ();

    @each $item in $prop {
      $result: append($result, $item, comma);
    }

    transition-timing-function: $easing;
    transition-duration: $duration;
    transition-property: $result;
    will-change: $result;
  }
}

@mixin responsive-font($pixelSize: 21, $minimum: 4) {
  $rem: #{calc($pixelSize / 10)}rem;
  $threeQuarter: ceil($pixelSize - calc(calc($pixelSize / 4)));

  @if ($minimum != 4) {
    $threeQuarter: $minimum;

    font-size: rem($minimum);
  } @else {
    font-size: rem($threeQuarter);
  }

  // https://css-tricks.com/snippets/css/fluid-typography/
  @include respond-to('xs') {
    // stylelint-disable-next-line function-calc-no-invalid
    font-size: calc(
      #{$threeQuarter}px + (#{$pixelSize} - #{$threeQuarter}) *
        calc((100vw - 320px) / (1200 - 320))
    );
  }

  @include respond-to('xl') {
    font-size: rem($pixelSize);
  }
}

@mixin secondary-font() {
  @if ($font_secondary) {
    font-family: $font_secondary;
  }
}

@mixin letter-spacing() {
  @if ($letter_spacing) {
    letter-spacing: $letter_spacing;
  }
}

@mixin font-size-xs {
  @include responsive-font(14);
}

@mixin font-size-sm {
  @include responsive-font(18);
}

@mixin font-size-md {
  @include responsive-font(20);
}

@mixin font-size-lg {
  @include responsive-font(50);
  @include letter-spacing();
  line-height: 1.2;
}

@mixin font-size-xl {
  @include responsive-font(80);
  @include letter-spacing();
  line-height: 1.2;
}
